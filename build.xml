<project name="MonitorQuery" basedir="." default="war.all">

    <property name="name" value="MonitorQuery"/>
    <property file="${user.home}/${name}.properties"/>
    <property file="${user.home}/build.properties"/>
    <property name="config.filename" value="${user.name}.properties"/>
    <property file="${config.filename}"/>
    <property file="build.properties"/>

    <property name="project.base.dir" value="."/>
    <property name="src" value="${project.base.dir}/src"/>
    <property name="resources" value="${project.base.dir}/resources"/>
    <property name="WebContent" value="${project.base.dir}/WebContent"/>
    <property name="test" value="${project.base.dir}/test"/>
    <property name="build" value="${project.base.dir}/build"/>
    <property name="project.lib" value="${project.base.dir}/lib" />
    <property name="war" value="${build}/war"/>
    <property name="classes" value="${war}/WEB-INF/classes"/>
    <property name="warlib" value="${war}/WEB-INF/lib"/>
    <property name="lib" value="${build}/lib"/>
    <property name="external" value="${build}/external"/>
	<property name="external.dir" location="${external}" />
    <property name="external.jars" value="${build}/external/lib"/>
    <property name="resources" value="${project.base.dir}/resources"/>
    <property value="" name="jars.ok"/>
    <property name="hudson.url" value="jenkins.momentumsoftware.com:8080/"/>

    <property name="maven.compat" value="true"/>

    <property name="dist.suffix" value="" />
    <property name="toughresources" value="TopStackResources${dist.suffix}" />
    <property name="toughresources.dir" value="${project.base.dir}/../${toughresources}"/>

    <property name="protobuffers.version" value="2.4.1" />
    <property name="protobuf.dir" location="${src}/protobuf" />
    <property name="message.dir" value="${src}/com/transcend/monitor/message" />

    <import file="${toughresources.dir}/common.build.xml" />

    <target name="init">
        <mkdir dir="${build}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${warlib}"/>
        <mkdir dir="${lib}"/>
        <mkdir dir="${external}"/>
        <mkdir dir="${external.jars}"/>
        <mkdir dir="${message.dir}" />
    </target>

    <property name="monitorcommon" value="MonitorCommon${dist.suffix}" />

    <target name="xcopy-dependencies-hudson" depends="init" unless="is.development">
        <dependencies-hudson project.build.number="lastSuccessfulBuild">
            <dependencies>
                <get src="http://${hudson.url}/job/${monitorcommon}/@{project.build.number}/artifact/build/lib/tough-monitor-common.jar"
                    dest="${external.jars}/tough-monitor-common.jar"/>
            </dependencies>
        </dependencies-hudson>
            <copy todir="${warlib}">
                <fileset dir="${project.lib}"/>
            </copy>
    </target>

    <target name="xcopy-dependencies-dev" description="Get the project from local" depends="init" if="is.development">
        <dependencies-dev>
            <dependencies>
                <copy todir="${external.jars}" file="${project.base.dir}/../${monitorcommon}/build/lib/tough-monitor-common.jar"></copy>
                <unzip dest="${external.jars}" src="${external}/tough-resources-config.zip"/>
            </dependencies>
        </dependencies-dev>
        <copy todir="${warlib}">
           <fileset dir="${project.lib}"/>
        </copy>
    </target>

    <!--target name="war.all" depends="compile.src, copy.config, copyWebContent, run.tests">
        <war.all.generic>
            <war-lib-patterns/>
            <war-classes/>
        </war.all.generic>
    </target -->
    <!-- general targets -->
    <target name="unpack-protobuffers" depends="init">
    </target>

    <target name="compile.proto" depends="unpack-protobuffers">
        <delete>
            <fileset dir="${message.dir}">
                <include name="*Message.java"/>
            </fileset>
        </delete>

        <apply executable="protoc" verbose="true">
            <arg value="--proto_path=${protobuf.dir}"/>
            <arg value="--java_out=${src}"/>
            <srcfile/>
            <fileset dir="${protobuf.dir}" includes="*.proto"/>
        </apply>
    </target>

    <target name="war.all" depends="compile.proto, compile.src, copy.config, copyWebContent, run.tests">
        <war.all.maven/>
    </target>

    <target name="maven.deploy" depends="dist, maven.deploy.war">
    </target>

</project>
